import numpy as np
import pandas as pd
from collections import Counter
import os, os.path, shutil

"""
This code detects all subjects that have 18 images or more from "HAND_ASPECT" aspect
And for each such subject copies all images from that aspect to a directory  
"""

HAND_ASPECT = "dorsal right"
OLD_DATASET_PATH = "/galitylab/students/Noam/Datasets/189_hands_upright_c1_random/"
NEW_DATASET_PATH = "/galitylab/students/Noam/Datasets/100_dorsal_right_hands/"
ASPECTS_COUNT_PATH = "/galitylab/students/Noam/Datasets/100_dorsal_right_metadata/Hand_Subject_MetaData.csv"
ALL_HANDS_METADATA = "/galitylab/students/Noam/Datasets/100_dorsal_right_metadata/Hand_Metadata.csv"
NEW_ASPECT_METADATA = "/galitylab/students/Noam/Datasets/100_dorsal_right_metadata/100_dorsal_right_metadata.csv"

SUFFICIENT_IMAGES = 18

subjects_df = pd.DataFrame(columns=["id", "count"])  # df that will store all metadata of dorsal right subjects
all_hands_df = pd.read_csv(ALL_HANDS_METADATA)
print(all_hands_df)

# copies all subjects that have sufficient images
df = pd.read_csv(ASPECTS_COUNT_PATH)
subjects_with_sufficient = df.loc[(df["count"] >= SUFFICIENT_IMAGES) & (df["aspectOfHand"] == HAND_ASPECT)]
print(f'Subjects with sufficient number of images:\n{subjects_with_sufficient}')

for index, row in subjects_with_sufficient.iterrows():
    subject_id = str(row["id"])
    new_path = os.path.join(NEW_DATASET_PATH, subject_id)
    if row["count"] < 20:
        new_path = new_path + "_" + str(row["count"])
    if not os.path.exists(new_path):
        os.makedirs(new_path)
    for folder in ["train", "val"]:
        old_folder_path = os.path.join(OLD_DATASET_PATH, folder, subject_id)
        for image in os.listdir(old_folder_path):
            # if the image is not in the desired aspect:
            image_df = all_hands_df.loc[(all_hands_df["imageName"] == image)]
            if image_df.iloc[0]["aspectOfHand"] != HAND_ASPECT:
                continue
            old_image_path = os.path.join(old_folder_path, image)
            new_image_path = os.path.join(new_path, image)
            shutil.copy(old_image_path, new_image_path)
    new_row = pd.DataFrame({"id": [subject_id], "count": [row["count"]]})
    subjects_df = pd.concat([subjects_df,new_row])

# copy the 48 subjects generated by me:
my_subjects = pd.DataFrame({"id": ["N_"+ str(i) for i in range(1,49)], "count": [20 for i in range(1,49)]})
subjects_df = pd.concat([subjects_df,my_subjects])



open(NEW_ASPECT_METADATA, 'a').close()
print(subjects_df)
subjects_df.to_csv(NEW_ASPECT_METADATA)